% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stamp_text.R
\name{stamp_text}
\alias{stamp_text}
\title{Stamp some text}
\usage{
stamp_text(
  x = 0,
  y = 0,
  label = "some\\n text",
  alpha = 1,
  angle = 0,
  color = "black",
  family = "times",
  fontface = "sarif",
  hjust = 0,
  lineheight = 0.8,
  size = 8,
  vjust = 0.5,
  xy = NULL,
  parse = FALSE,
  nudge_x = 0,
  nudge_y = 0
)
}
\arguments{
\item{x}{defaults to 0}

\item{y}{defaults to 0}

\item{label}{defaults with a message about use}

\item{alpha}{transparency of label}

\item{color}{color of text, consider named colors https://evamaerey.github.io/ggplot2_grammar_guide/named_colors}

\item{family}{font family}

\item{hjust}{horizontal justification, between 0 and 1, defaults to .5}

\item{lineheight}{spacing between lines if text is wrapped}

\item{size}{size of text}

\item{vjust}{vertical justification, between 0 and 1, defaults to .5}

\item{xy}{a data frame where the first two columns contain x and y positional values}

\item{parse}{If TRUE, the labels will be parsed into expressions and displayed as described in ?plotmath.}

\item{nudge_x}{Horizontal adjustment to nudge labels by. Useful for offsetting text from points, particularly on discrete scales.}

\item{nudge_y}{Vertical adjustment to nudge labels by. Useful for offsetting text from points, particularly on discrete scales.}
}
\value{

}
\description{
This function adds a text annotation layer
}
\examples{
# cool text
library(ggplot2)
ggplot(cars) +
 aes(speed, dist) +
 geom_point() +
 stamp_text(label = stringr::str_wrap("a speed v. stopping distance, 1920s study tells us ...", 30),
            x = 12, y = 110,
            size = 5)

# some more
 ggcanvas() +
  stamp_text() +
  stamp_text(label = letters[1:4],
  xy = spoke(n = 4)) +
  stamp_text(x = 2) +
  scale_x_continuous(limits = c(-1,3)) +
  stamp_text(y = 1:2, x = 2,
             label = "Hello\nthere!") +
  theme_void() +
  stamp_point(x = 1, y = 1,
              alpha = .4) +
  theme(plot.background =
       element_rect(fill = "seagreen",
       size = 0)) +
  scale_y_continuous(limits = c(-1,3))
}
